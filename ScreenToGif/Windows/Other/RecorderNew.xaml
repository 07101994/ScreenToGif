<Window x:Class="ScreenToGif.Windows.Other.RecorderNew"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:n="clr-namespace:ScreenToGif.Controls"
        xmlns:c="clr-namespace:ScreenToGif.Util.Converters"
        xmlns:u="clr-namespace:ScreenToGif.Util"
        x:Name="GhostWindow" Title="ScreenToGif" Height="Auto" Width="Auto" 
        WindowStyle="None" AllowsTransparency="True" Topmost="True" ResizeMode="NoResize"
        UseLayoutRounding="True" SnapsToDevicePixels="True" Background="Transparent"
        Loaded="Window_Loaded" Closing="Window_Closing">

    <Window.CommandBindings>
        <CommandBinding Command="u:Commands.Options" CanExecute="Options_CanExecute" Executed="Options_Executed"/>
        <CommandBinding Command="u:Commands.EnableSnapshot" CanExecute="EnableSnapshot_CanExecute" Executed="EnableSnapshot_Executed"/>
    </Window.CommandBindings>

    <Window.Resources>
        <Storyboard x:Key="ShowDiscardStoryboard">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="DiscardButton" Storyboard.TargetProperty="IsHitTestVisible" Duration="0:0:0" >
                <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0"/>
            </BooleanAnimationUsingKeyFrames>

            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DiscardButton" Storyboard.TargetProperty="Visibility" Duration="0:0:0">
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0"/>
            </ObjectAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="DiscardButton" Storyboard.TargetProperty="(Button.Opacity)" From="0" To="1" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="HideDiscardStoryboard">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="DiscardButton" Storyboard.TargetProperty="IsHitTestVisible" Duration="0:0:0" >
                <DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:0"/>
            </BooleanAnimationUsingKeyFrames>

            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DiscardButton" Storyboard.TargetProperty="Visibility" Duration="0:0:0">
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="0:0:0"/>
            </ObjectAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="DiscardButton" Storyboard.TargetProperty="(Button.Opacity)" 
                             From="{Binding ElementName=DiscardButton,Path=Opacity}" To="0" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <c:StageToButtonString x:Key="StageToButtonStringConverter"/>
        <c:StageToCanvas x:Key="StageToCanvasConverter"/>
        <c:ShortcutKeys x:Key="ShortcutKeys"/>
        <c:InvertedBoolToVisibility x:Key="InvertedBoolToVisibility"/>
        <c:BoolOrToInvertedVisibility x:Key="BoolOrToInvertedVisibility"/>
        <c:IntToString x:Key="IntToStringConverter"/>
    </Window.Resources>
    
    <AdornerDecorator>
        <n:AdornedControl x:Name="AdornedControl" IsAdornerVisible="{Binding ElementName=GhostWindow, Path=IsPickingRegion}">
            <n:AdornedControl.AdornerContent>
                <n:SelectControl x:Name="SelectControl" Width="{Binding ElementName=GhostWindow, Path=Width}" Height="{Binding ElementName=GhostWindow, Path=Height}" 
                                 IsPickingRegion="{Binding ElementName=GhostWindow, Path=IsPickingRegion}" Selected="{Binding ElementName=GhostWindow, Path=Region, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 SelectionAccepted="SelectControl_SelectionAccepted" SelectionCanceled="SelectControl_SelectionCanceled"/>
            </n:AdornedControl.AdornerContent>

            <Canvas x:Name="MainCanvas" Background="Transparent">
                <Canvas.Resources>
                    <c:InvertedBoolToVisibility x:Key="InvertedBoolToVisibility"/>
                </Canvas.Resources>

                <Border x:Name="MainBorder" Width="Auto" Height="Auto" BorderThickness="1" BorderBrush="#35000000" Background="White"
                        Visibility="{Binding ElementName=GhostWindow, Path=IsPickingRegion, Converter={StaticResource InvertedBoolToVisibility}}"
                        MouseLeftButtonDown="MainBorder_MouseLeftButtonDown" MouseMove="MainBorder_MouseMove" MouseLeftButtonUp="MainBorder_MouseLeftButtonUp">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" x:Name="FirstRow"/>
                            <RowDefinition Height="32" x:Name="SecondRow"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>

                            <n:ImageButton Grid.Row="0" Grid.Column="0" x:Name="BackButton" Content="{DynamicResource Vector.Back}" Width="30" Padding="2"
                                           Style="{DynamicResource Style.Button.NoText}" Effect="{DynamicResource Shadow.Foreground.Small}" MaxSize="20" 
                                           ToolTipService.HorizontalOffset="-5" ToolTipService.Placement="Bottom" ToolTip="{DynamicResource Back}"/>

                            <TextBlock Grid.Column="1" x:Name="CaptionText" Text="{Binding ElementName=GhostWindow, Path=Title}" FontFamily="Segoe UI" FontSize="16" VerticalAlignment="Center"
                                       FontWeight="Regular" Margin="5,0,0,0" Foreground="{Binding ElementName=GhostWindow, Path=Foreground}" Effect="{StaticResource Shadow.Foreground.Small}"/>

                            <n:ImageButton Grid.Row="0" Grid.Column="2" x:Name="CloseButton" Content="{DynamicResource Vector.Close}" Margin="0" 
                                           Style="{DynamicResource Style.Button.NoText}" Effect="{DynamicResource Shadow.Foreground.Small}" 
                                           MaxSize="18" Padding="2" Click="CloseButton_Click"/>
                        </Grid>

                        <Grid Grid.Row="1" x:Name="RecordControlsGrid" Visibility="{Binding ElementName=GhostWindow, Path=WasRegionPicked, Converter={StaticResource Bool2Visibility}, FallbackValue=Visible}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <n:ImageButton Grid.Column="0" x:Name="OptionsButton" Content="{DynamicResource Vector.Options}" Margin="0" Padding="3"
                                           Style="{DynamicResource Style.Button.NoText}" Effect="{DynamicResource Shadow.Foreground.Small}" MaxSize="22"
                                           ToolTipService.HorizontalOffset="-5" ToolTipService.Placement="Bottom" ToolTip="{DynamicResource Options}"/>

                            <Viewbox Grid.Column="1" Stretch="UniformToFill" ClipToBounds="True" Focusable="False"
                                     Visibility="{Binding Path=SnapshotMode, Source={x:Static u:UserSettings.All}}"
                                     ToolTipService.HorizontalOffset="-5" ToolTipService.Placement="Bottom" ToolTip="{DynamicResource Recorder.FpsRange}">

                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" FlowDirection="LeftToRight" Margin="-4">
                                    <n:CircularProgressBar StrokeThickness="2" Percentage="100" SegmentColor="Gray" Radius="24" IsTabStop="False"/>
                                    <n:CircularProgressBar StrokeThickness="22" Percentage="100" SegmentColor="#FFF0F1F1" Radius="10" IsTabStop="False"/>

                                    <n:CircularProgressBar StrokeThickness="2" Value="{Binding ElementName=FpsIntegerUpDown, Path=Value, Mode=OneWay}" 
                                                                   IsInverted="True" Minimum="1" Maximum="60" SegmentColor="#FFE28A73" Radius="24" IsTabStop="False"/>
                                    <n:CircularProgressBar StrokeThickness="22" Value="{Binding ElementName=FpsIntegerUpDown, Path=Value, Mode=OneWay}" 
                                                                   IsInverted="True" Minimum="1" Maximum="60" SegmentColor="#FFE28A73" Radius="10" IsTabStop="False"/>
                                </Grid>
                            </Viewbox>

                            <n:IntegerUpDown Grid.Column="2" x:Name="FpsIntegerUpDown" Margin="1,3" StepValue="1" Minimum="1" Maximum="60" MinWidth="45" TabIndex="4"
                                             Value="{Binding Source={x:Static u:UserSettings.All}, Path=LatestFps, Mode=TwoWay}"
                                             Visibility="{Binding SnapshotMode, Source={x:Static u:UserSettings.All}, Converter={StaticResource InvertedBoolToVisibility}}"
                                             ToolTipService.HorizontalOffset="-5" ToolTipService.Placement="Bottom" ToolTip="{DynamicResource Recorder.Fps}"/>

                            <Label Grid.Column="3" Content="fps" FontSize="12" FontFamily="Segoe UI" Margin="1,0,0,0" 
                                   VerticalContentAlignment="Center" Padding="0" Foreground="{Binding ElementName=RecorderLightWindow, Path=Foreground}" 
                                   Visibility="{Binding SnapshotMode, Source={x:Static u:UserSettings.All}, Converter={StaticResource InvertedBoolToVisibility}}"/>

                            <Separator Grid.Column="4" Width="1" Margin="5,2" 
                                       Visibility="{Binding SnapshotMode, Source={x:Static u:UserSettings.All}, Converter={StaticResource InvertedBoolToVisibility}}"/>

                            <n:ImageButton Grid.Column="5" x:Name="ReselectButton" Content="{DynamicResource Vector.Crop}"
                                           Style="{DynamicResource Style.Button.NoText}" Effect="{DynamicResource Shadow.Foreground.Small}" 
                                           MaxSize="20" Padding="3" Click="ReselectButton_Click"/>

                            <n:ImageButton Grid.Column="6" x:Name="DiscardButton" Content="{DynamicResource Vector.Remove}" Visibility="Collapsed" 
                                           Style="{DynamicResource Style.Button.NoText}" Effect="{DynamicResource Shadow.Foreground.Small}" 
                                           MaxSize="20" Padding="3" Click="DiscardButton_Click"/>

                            <n:ImageButton Grid.Column="7" x:Name="RecordPauseButton" Content="{DynamicResource Vector.Record}"
                                           Style="{DynamicResource Style.Button.NoText}" Effect="{DynamicResource Shadow.Foreground.Small}" 
                                           MaxSize="20" Padding="3" Click="RecordPauseButton_Click"/>

                            <n:ImageButton Grid.Column="8" x:Name="StopButton" Content="{DynamicResource Vector.Stop}"
                                           Style="{DynamicResource Style.Button.NoText}" Effect="{DynamicResource Shadow.Foreground.Small}" 
                                           MaxSize="20" Padding="3" Click="StopButton_Click"/>
                        </Grid>

                        <Grid Grid.Row="1" Visibility="{Binding ElementName=GhostWindow, Path=WasRegionPicked, Converter={StaticResource InvertedBoolToVisibility}, FallbackValue=Collapsed}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <n:ImageButton Grid.Column="0" x:Name="RegionButton" Text="Region" Content="{StaticResource Vector.Crop}" TabIndex="1" 
                                           Style="{DynamicResource Style.Button.Horizontal}" Foreground="{Binding ElementName=RecorderLightWindow, Path=Foreground}" 
                                           MaxSize="20" Padding="3" Click="RegionButton_Click"/>

                            <n:ImageButton Grid.Column="1" x:Name="WindowButton" Text="Window" Content="{StaticResource Vector.Application}" TabIndex="4" 
                                           Foreground="{Binding ElementName=RecorderLightWindow, Path=Foreground}" Style="{DynamicResource Style.Button.Horizontal}"
                                           MaxSize="20" Padding="3"  Click="WindowButton_Click"/>

                            <n:ImageButton Grid.Column="2" x:Name="FullscreenButton" Text="Fullscreen" Content="{StaticResource Vector.WidthHeight}" TabIndex="3" 
                                           Foreground="{Binding ElementName=RecorderLightWindow, Path=Foreground}" Style="{DynamicResource Style.Button.Horizontal}" 
                                           MaxSize="20" Padding="3"  Click="FullScreenButton_Click"/>
                        </Grid>
                    </Grid>
                </Border>

                <Rectangle x:Name="DashedRectangle" StrokeDashArray="5" Stroke="#FFABABAB" Visibility="Visible"
                           Canvas.Left="{Binding ElementName=GhostWindow, Path=Region.Left}" Canvas.Top="{Binding ElementName=GhostWindow, Path=Region.Top}"
                           Width="{Binding ElementName=GhostWindow, Path=Region.Width}" Height="{Binding ElementName=GhostWindow, Path=Region.Height}"/>

                <TextBlock x:Name="InfoTextBlock" Text="Press Esc to cancel" Visibility="Collapsed"
                           Foreground="#88000000" FontWeight="Bold" FontFamily="Segoe UI" FontStretch="Expanded" FontSize="90"
                           Canvas.Left="{Binding ElementName=MainBorder, Path=(Canvas.Left)}"
                           Canvas.Top="{Binding ElementName=MainBorder, Path=(Canvas.Top)}"/>
            </Canvas>
        </n:AdornedControl>
    </AdornerDecorator>
</Window>